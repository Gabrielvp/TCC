/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.CPagarDAO;
import dao.FormaPagamentoDAO;
import dao.Parcelas_CPagarDAO;
import entity.CPagar;
import entity.FormaPagamento;
import entity.Parcelas_CPagar;
import entity.Pessoa;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel1
 */
public class TelaContasAPagar extends javax.swing.JDialog {

    /**
     * Creates new form Financeiro
     */
    public TelaContasAPagar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        String data = sdfD.format(new Date());
        txtData.setText(data);
        combo();
    }

    SimpleDateFormat sdfD = new SimpleDateFormat("dd/MM/yyyy");
    DecimalFormat df = new DecimalFormat("####.00");
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
    Pessoa p = new Pessoa();
    CPagarDAO cpDAO = new CPagarDAO();
    Parcelas_CPagarDAO pcpDAO = new Parcelas_CPagarDAO();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtEntrada = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIntervalo = new javax.swing.JTextField();
        txtValorParcela = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtParcelas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblParcelas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtNome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnPesquisaOrcamento = new javax.swing.JButton();
        txtFatura = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtVencimento = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnPesquisaCliente = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cbFormaPagamento = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Contas a Pagar - Agenda Financeira");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 51, 153)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalvar.setBackground(new java.awt.Color(255, 255, 255));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Apply.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 400, -1, -1));

        btnExcluir.setBackground(new java.awt.Color(255, 255, 255));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 400, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 51, 153)), "Parcelas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 1, 10), new java.awt.Color(0, 51, 153))); // NOI18N

        jLabel10.setText("Entrada");

        txtEntrada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));
        try {
            txtEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEntradaKeyPressed(evt);
            }
        });

        jLabel11.setText("Intervalo:");

        txtIntervalo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));
        txtIntervalo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIntervaloKeyPressed(evt);
            }
        });

        txtValorParcela.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        jLabel7.setText("Parcelas:");

        txtParcelas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));
        txtParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtParcelasKeyPressed(evt);
            }
        });

        jLabel8.setText("Valor R$:");

        tblParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parcela", "Valor R$", "Vencimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblParcelas);
        if (tblParcelas.getColumnModel().getColumnCount() > 0) {
            tblParcelas.getColumnModel().getColumn(1).setResizable(false);
            tblParcelas.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValorParcela, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(txtIntervalo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 700, 170));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)), "Dados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 1, 10), new java.awt.Color(0, 51, 153))); // NOI18N

        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        jLabel1.setText("Nome:");

        btnPesquisaOrcamento.setBackground(new java.awt.Color(255, 255, 255));
        btnPesquisaOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Find.png"))); // NOI18N
        btnPesquisaOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaOrcamentoActionPerformed(evt);
            }
        });

        txtFatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        txtTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        jLabel6.setText("Total R$");

        txtVencimento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));
        try {
            txtVencimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setText("Vencimento:");

        txtData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));
        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Data:");

        jLabel3.setText("Fatura:");

        btnPesquisaCliente.setBackground(new java.awt.Color(255, 255, 255));
        btnPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Find.png"))); // NOI18N
        btnPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaClienteActionPerformed(evt);
            }
        });

        jLabel12.setText("Forma Pagamento");

        cbFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaPagamentoActionPerformed(evt);
            }
        });

        jLabel13.setText("Código:");

        txtCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisaCliente))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(11, 11, 11)
                                        .addComponent(txtFatura, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisaOrcamento)
                                .addGap(12, 12, 12)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPesquisaCliente)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFatura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addComponent(btnPesquisaOrcamento)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 700, 170));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 51));
        jLabel2.setText("Contas a Pagar");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        btnLimpar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pincel.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaClienteActionPerformed
        String nome = txtNome.getText();
        if (nome.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Digite uma letra para pesquisa");
        } else {
            TelaPesquisaPessoa tela = new TelaPesquisaPessoa(null, rootPaneCheckingEnabled, nome, 0);
            tela.setVisible(true);
            txtNome.setText(tela.p.getNome());
            txtCodigo.setText(tela.p.getIdPessoa() + "");
        }
    }//GEN-LAST:event_btnPesquisaClienteActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (verificaCadastroCompleto()) {
            CPagarDAO cpDAO = new CPagarDAO();
            CPagar cp = new CPagar();
            FormaPagamento fPagamento = new FormaPagamento();
            Parcelas_CPagar pCP = new Parcelas_CPagar();
            Parcelas_CPagarDAO pcpDAO = new Parcelas_CPagarDAO();
            FormaPagamentoDAO fpDAO = new FormaPagamentoDAO();

            if (cbFormaPagamento.getSelectedItem().toString().equals("Selecione a Forma de Pagamento")) {
                JOptionPane.showMessageDialog(rootPane, "Selecione a Forma de Pagamento!");
            } else if (txtVencimento.getText().equals("  /  /    ")) {
                JOptionPane.showMessageDialog(rootPane, "Insira o Vencimento");
            } else {
                String vl = txtTotal.getText().replaceAll(",", ".");
                cp.setIdPessoa(Integer.parseInt(txtCodigo.getText()));
                cp.setPessoa(txtNome.getText());
                cp.setFormPagamento(cbFormaPagamento.getSelectedItem().toString());
                List<FormaPagamento> lista = fpDAO.listaDesc(cbFormaPagamento.getSelectedItem().toString());
                for (int i = 0; i < lista.size(); i++) {
                    if (lista.get(i).isaVista()) {
                        cp.setaVista(true);
                    } else {
                        cp.setaVista(false);
                    }
                }
                cp.setFatura(txtFatura.getText());
                cp.setTotal(Double.parseDouble(vl));
                try {
                    cp.setData(sdfD.parse(txtData.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    cp.setVencimento(sdfD.parse(txtVencimento.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (txtParcelas.getText().equals("")) {
                    cpDAO.insert(cp);
                    JOptionPane.showMessageDialog(rootPane, "Salvo com Sucesso!");
                    limparTela();
                } else {
                    cpDAO.insert(cp);
                }

                if (!txtParcelas.getText().equals("")) {
                    if (txtValorParcela.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Insira o número de parcelas e pressione enter");
                    } else if (txtEntrada.getText().equals("  /  /    ")) {
                        JOptionPane.showMessageDialog(rootPane, "Insira a data da entrada");
                    } else if (txtIntervalo.getText().equals("")) {
                        JOptionPane.showMessageDialog(rootPane, "Insira o intervalo entre as parcelas");
                    } else if (tblParcelas.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Insira o intervalo entre as parcelas e pressione enter");
                    } else {
                        int linhas = tblParcelas.getRowCount();
                        for (int i = 0; i < linhas; i++) {
                            String valor = tblParcelas.getValueAt(i, 1).toString().replaceAll(",", ".");
                            pCP.setFatura(txtFatura.getText());
                            pCP.setParcelas(tblParcelas.getValueAt(i, 0).toString());
                            pCP.setValor(Double.parseDouble(valor));
                            cp.setParcelas(Integer.parseInt(txtParcelas.getText()));
                            cpDAO.updateParcela(cp);
                            try {
                                pCP.setEntrada(sdfD.parse(txtEntrada.getText()));
                            } catch (ParseException ex) {
                                Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            try {
                                pCP.setVencimento(sdfD.parse(tblParcelas.getValueAt(i, 2).toString()));
                            } catch (ParseException ex) {
                                Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            pCP.setIntervalo(Integer.parseInt(txtIntervalo.getText()));
                            pCP.setIdCPagar(cp.getIdCPagar());

                            pcpDAO.insert(pCP);
                        }
                        JOptionPane.showMessageDialog(rootPane, "Salvo com Sucesso!");
                        limparTela();
                    }
                } else {
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtParcelasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParcelasKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            String vl = txtTotal.getText().replaceAll(",", ".");
            double valor = Double.parseDouble(vl);
            int parcelas = Integer.parseInt(txtParcelas.getText());
            double resultado = valor / parcelas;
            txtValorParcela.setText(df.format(resultado) + "");
        }
    }//GEN-LAST:event_txtParcelasKeyPressed

    private void txtIntervaloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIntervaloKeyPressed
        int contador = 0;
        DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
        if (evt.getKeyCode() == evt.VK_ENTER) {
            esquerda.setHorizontalAlignment(SwingConstants.RIGHT);
            tblParcelas.getColumnModel().getColumn(1).setCellRenderer(esquerda);
            tblParcelas.getColumnModel().getColumn(2).setCellRenderer(esquerda);
            try {
                int intervalo = Integer.parseInt(txtIntervalo.getText());
                int parcelas = Integer.parseInt(txtParcelas.getText());
                Date data = sdfD.parse(txtEntrada.getText());
                model.setNumRows(0);
                GregorianCalendar calInicio = new GregorianCalendar();
                for (int i = 0; i < parcelas; i++) {
                    contador++;
                    calInicio.add(GregorianCalendar.DAY_OF_MONTH, intervalo);
                    data = calInicio.getTime();
                    model.addRow(new Object[]{txtFatura.getText() + "/" + contador, txtValorParcela.getText(), sdfD.format(data)});
                }
            } catch (ParseException ex) {
                Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtIntervaloKeyPressed

    private void btnPesquisaOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaOrcamentoActionPerformed
        if (txtCodigo.getText().equals("") || txtNome.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Insira uma pessoa para pesquisa");
        } else {
            int id = Integer.parseInt(txtCodigo.getText());
            p.setIdPessoa(Integer.parseInt(txtCodigo.getText()));
            p.setNome(txtNome.getText());
            TelaPesquisaFatura tela = new TelaPesquisaFatura(null, rootPaneCheckingEnabled, id, p, 2);
            tela.setVisible(true);
            String fatura = tela.coluna;

            DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
            List<CPagar> lista = cpDAO.listarCPagarString(fatura);
            List<Parcelas_CPagar> listaParcelas = pcpDAO.listarParcelasString(fatura);
            for (int i = 0; i < lista.size(); i++) {
                txtFatura.setText(lista.get(i).getFatura());
                txtTotal.setText(df.format(lista.get(i).getTotal()) + "");
                txtData.setText(sdfD.format(lista.get(i).getData()));
                txtVencimento.setText(sdfD.format(lista.get(i).getVencimento()));
                cbFormaPagamento.setSelectedItem(lista.get(i).getFormPagamento().toString());
                if (lista.get(i).getParcelas() > 0) {
                    txtParcelas.setText(lista.get(i).getParcelas() + "");
                    model.setNumRows(0);
                    for (int j = 0; j < listaParcelas.size(); j++) {
                        model.addRow(new Object[]{});
                        txtIntervalo.setText(listaParcelas.get(i).getIntervalo() + "");
                        txtEntrada.setText(sdfD.format(listaParcelas.get(i).getEntrada()));
                        txtValorParcela.setText(df.format(listaParcelas.get(i).getValor()));
                        model.setValueAt(listaParcelas.get(j).getParcelas(), j, 0);
                        model.setValueAt(df.format(listaParcelas.get(j).getValor()), j, 1);
                        model.setValueAt(sdfD.format(listaParcelas.get(j).getVencimento()), j, 2);
                    }

                }
            }
        }
    }//GEN-LAST:event_btnPesquisaOrcamentoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (txtCodigo.getText().equals("") || txtNome.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Insira uma pessoa");
        } else if (txtFatura.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Insira uma fatura");
        } else {
            int confirmacao = JOptionPane.showConfirmDialog(this, "Deseja Excluir o  Débito?", "Exclusão", 0, 0);
            if (confirmacao == 0) {
                int id = Integer.parseInt(txtCodigo.getText());
                String fat = txtFatura.getText();
                pcpDAO.delete(fat);
                cpDAO.delete(id, fat);
                JOptionPane.showMessageDialog(rootPane, "Débito Excluído!");
                limparTela();
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void cbFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaPagamentoActionPerformed
        String desc = cbFormaPagamento.getSelectedItem().toString();
        combo2(desc);
        limparParcelado();
    }//GEN-LAST:event_cbFormaPagamentoActionPerformed

    private void txtEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyPressed
        int contador = 0;
        DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
        if (evt.getKeyCode() == evt.VK_ENTER) {
            esquerda.setHorizontalAlignment(SwingConstants.RIGHT);
            tblParcelas.getColumnModel().getColumn(1).setCellRenderer(esquerda);
            tblParcelas.getColumnModel().getColumn(2).setCellRenderer(esquerda);
            try {
                int intervalo = Integer.parseInt(txtIntervalo.getText());
                int parcelas = Integer.parseInt(txtParcelas.getText());
                Date data = sdfD.parse(txtEntrada.getText());
                model.setNumRows(0);
                GregorianCalendar calInicio = new GregorianCalendar();
                for (int i = 0; i < parcelas; i++) {
                    contador++;
                    calInicio.add(GregorianCalendar.DAY_OF_MONTH, intervalo);
                    data = calInicio.getTime();
                    model.addRow(new Object[]{txtFatura.getText() + "/" + contador, txtValorParcela.getText(), sdfD.format(data)});
                }
            } catch (ParseException ex) {
                Logger.getLogger(TelaContasAReceber.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtEntradaKeyPressed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparTela();
    }//GEN-LAST:event_btnLimparActionPerformed

    public boolean verificaCadastroCompleto() {
        if (txtNome.getText().equals("")) {
            return false;
        } else if (txtCodigo.getText().equals("")) {
            return false;
        } else if (txtNome.getText().equals("")) {
            return false;
        } else if (txtFatura.getText().equals("")) {
            return false;
        } else if (txtTotal.getText().equals("")) {
            return false;
        } else if (txtData.getText().equals("")) {
            return false;
        } else if (txtVencimento.getText().equals("")) {
            return false;
        }
        return true;
    }

    public void combo() {
        cbFormaPagamento.removeAll();
        cbFormaPagamento.removeAllItems();
        cbFormaPagamento.addItem("Selecione a Forma de Pagamento");
        FormaPagamentoDAO fpDAO = new FormaPagamentoDAO();
        List<FormaPagamento> lista = fpDAO.lista();
        for (FormaPagamento fp : lista) {
            cbFormaPagamento.addItem(fp.getDescricao());
        }
    }

    public void combo2(String desc) {
        int contador = 0;
        DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
        FormaPagamentoDAO fpDAO = new FormaPagamentoDAO();
        List<FormaPagamento> lista = fpDAO.listaDesc(desc);
        for (int i = 0; i < lista.size(); i++) {
            boolean teste = lista.get(i).isaVista();
            if (teste) {
                txtEntrada.setEditable(false);
                txtParcelas.setEditable(false);
                txtIntervalo.setEditable(false);
                txtParcelas.setText("");
                txtIntervalo.setText("");
                txtValorParcela.setText("");
                txtEntrada.setText("");
                model.setNumRows(0);
            } else if (teste == false) {
                if (txtFatura.getText().equals("") || txtTotal.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Pagamento a Prazo..\n Indique a fatura e o total");
                } else {
                    txtEntrada.setEditable(true);
                    txtParcelas.setEditable(true);
                    txtIntervalo.setEditable(true);
                    txtParcelas.setText(lista.get(i).getParcela() + "");
                    txtIntervalo.setText(lista.get(i).getIntervalo() + "");
                    String vl = txtTotal.getText().replaceAll(",", ".");
                    double valor = Double.parseDouble(vl);
                    int parcelas = Integer.parseInt(txtParcelas.getText());
                    double resultado = valor / parcelas;
                    txtValorParcela.setText(df.format(resultado) + "");
                    try {
                        int intervalo = Integer.parseInt(txtIntervalo.getText());
                        int p = Integer.parseInt(txtParcelas.getText());
                        Date data = sdfD.parse(txtEntrada.getText());
                        GregorianCalendar calInicio = new GregorianCalendar();
                        model.setNumRows(0);
                        for (int j = 0; j < p; j++) {
                            contador++;
                            calInicio.add(GregorianCalendar.DAY_OF_MONTH, intervalo);
                            data = calInicio.getTime();
                            model.addRow(new Object[]{txtFatura.getText() + "/" + contador, txtValorParcela.getText(), sdfD.format(data)});

                        }
                    } catch (ParseException ex) {
                        Logger.getLogger(TelaContasAReceber.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }

    public void limparTela() {
        DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
        txtCodigo.setText("");
        txtNome.setText("");
        txtFatura.setText("");
        txtTotal.setText("");
        txtData.setText("");
        txtVencimento.setText("");
        txtParcelas.setText("");
        txtValorParcela.setText("");
        txtEntrada.setText("");
        txtIntervalo.setText("");
        cbFormaPagamento.setSelectedIndex(0);
        model.setNumRows(0);
    }

    public void limparParcelado() {
        DefaultTableModel model = (DefaultTableModel) tblParcelas.getModel();
        txtEntrada.setText("");
        txtIntervalo.setText("");
        txtParcelas.setText("");
        txtValorParcela.setText("");
        model.setNumRows(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaContasAPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaContasAPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaContasAPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaContasAPagar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaContasAPagar dialog = new TelaContasAPagar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisaCliente;
    private javax.swing.JButton btnPesquisaOrcamento;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbFormaPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblParcelas;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JFormattedTextField txtEntrada;
    private javax.swing.JTextField txtFatura;
    private javax.swing.JTextField txtIntervalo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtParcelas;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtValorParcela;
    private javax.swing.JFormattedTextField txtVencimento;
    // End of variables declaration//GEN-END:variables
}
